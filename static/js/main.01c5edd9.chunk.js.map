{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sPAkFeA,MA5Ef,WACE,OACE,6BACE,gCACE,gCAAQ,+BAAI,kBAAC,IAAD,MAAJ,QACR,gCAAQ,+BAAI,kBAAC,IAAD,MAAJ,UACR,gCAAQ,+BAAI,kBAAC,IAAD,MAAJ,UACR,gCAAQ,+BAAI,kBAAC,IAAD,MAAJ,YACR,gCAAQ,+BAAI,kBAAC,IAAD,MAAJ,UACR,gCAAQ,+BAAI,kBAAC,IAAD,MAAJ,cACR,gCAAQ,+BAAI,kBAAC,IAAD,MAAJ,iBACR,gCAAQ,+BAAI,kBAAC,IAAD,MAAJ,UAER,gCAAQ,+BAAI,kBAAC,IAAD,MAAJ,UAEV,yBAAKC,UAAU,QACb,yBAAKA,UAAU,gBACb,yCAGJ,yBAAKA,UAAU,QACb,yBAAKA,UAAU,gBAEb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,iBACb,wCACA,yBAAKA,UAAU,UACb,2BAAG,kBAAC,IAAD,MAAH,mBAEF,yBAAKA,UAAU,UACb,+BAAI,kBAAC,IAAD,MAAJ,+BAEF,yBAAKA,UAAU,UACf,+BAAI,kBAAC,IAAD,MAAJ,kBAIJ,yBAAKA,UAAU,SACb,yBAAKA,UAAU,iBAEb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,iBACf,2CACE,yBAAKA,UAAU,UACd,+BAAI,kBAAC,IAAD,MAAJ,4BAED,yBAAKA,UAAU,UACb,+BAAI,kBAAC,IAAD,MAAJ,yBAEF,yBAAKA,UAAU,UACb,+BAAI,kBAAC,IAAD,MAAJ,2BAIN,yBAAKA,UAAU,SACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,UACb,+BAAI,kBAAC,IAAD,MAAJ,2BAEF,yBAAKA,UAAU,UACb,+BAAI,kBAAC,IAAD,MAAJ,6BAEF,yBAAKA,UAAU,UACb,+BAAI,kBAAC,IAAD,MAAJ,qCCzDAC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.01c5edd9.chunk.js","sourcesContent":["import React from 'react';\n// import logo from './logo.svg';\n   import {FaServer,FaShoppingCart,FaFileAlt,FaDatabase,FaRegEdit,FaPhoneSquareAlt,FaTools,FaInfo,FaPowerOff, FaRegSun,FaTimesCircle,FaUserTie,FaTh,FaSellsy,FaEuroSign,FaRegWindowRestore} from \"react-icons/fa\";\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <header>\n        <button><p> <FaShoppingCart/>POS</p></button>\n        <button><p> <FaFileAlt/>SALES</p></button>\n        <button><p> <FaServer/>STOCK</p></button>\n        <button><p> <FaDatabase/>ACCOUNT</p></button>\n        <button><p> <FaRegEdit/>DIARY</p></button>\n        <button><p> <FaPhoneSquareAlt/>TELEPHONE</p></button>\n        <button><p> <FaTools/>MAINTAINANCE</p></button>\n        <button><p> <FaInfo/>ABOUT</p></button>\n        {/* <button><p>POS MENU</p></button> */}\n        <button><p> <FaPowerOff/>EXIT</p></button>\n      </header>\n      <div className=\"side\">\n        <div className=\"side-content\">\n          <p>POS MENU</p>\n        </div>\n      </div>\n      <div className=\"main\">\n        <div className=\"main-content\">\n          {/* <p>POS MENU</p> */}\n          <div className=\"sideA\">\n            <div className=\"sideA-content\">\n              <h2>POS Menu</h2>\n              <div className=\"circle\">\n                <p><FaShoppingCart/>Point Of Sales</p>\n              </div>\n              <div className=\"circle\">\n                <p> <FaRegSun/>Cash Drawer Reconciliation</p>\n              </div>\n              <div className=\"circle\">\n              <p> <FaTimesCircle/>Close (Esc)</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"sideB\">\n            <div className=\"sideB-content\">\n              {/* <h2>POS Reports</h2> */}\n              <div className=\"sideC\">\n                <div className=\"sideC-content\">\n                <h2>POS Reports</h2>\n                  <div className=\"circle\">\n                   <p> <FaFileAlt/>1.Summary Income Report</p>\n                  </div>\n                  <div className=\"circle\">\n                    <p> <FaRegWindowRestore/>2.Daily Sales Report</p>\n                  </div>\n                  <div className=\"circle\">\n                    <p> <FaUserTie/>3.Staff Sales Report</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"sideD\">\n                <div className=\"sideD-content\">\n                  <div className=\"circle\">\n                    <p> <FaTh/>4.Groups Sales Reports</p>\n                  </div>\n                  <div className=\"circle\">\n                    <p> <FaSellsy/>5.Sales Analysis Reports</p>\n                  </div>\n                  <div className=\"circle\">\n                    <p> <FaEuroSign/>6.Multi-Currency Reports</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n        </div>\n      </div>\n     </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}